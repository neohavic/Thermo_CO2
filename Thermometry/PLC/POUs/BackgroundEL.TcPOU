<?xml version="1.0" encoding="utf-8"?>
<TcPlcObject Version="1.1.0.1" ProductVersion="3.1.4024.12">
  <POU Name="BackgroundEL" Id="{f457c720-16fc-4334-8463-7b4855cd493e}" SpecialFunc="None">
    <Declaration><![CDATA[PROGRAM BackgroundEL
VAR
	(* background communication with the EL6021 terminal *)
	fbEL6021Ctrl_RTD			: SerialLineControl;
	bEL6021CtrlError_RTD		: BOOL;
	eEL6021CtrlErrorID_RTD		: ComError_t;
	(* 	I/O variables for a EL6021 terminal*)
	stIn_EL6001_RTD AT %I*		: EL6inData22B;	(* linked to the EL6001 in the TwinCAT System Manager *)
	stOut_EL6001_RTD AT %Q*		: EL6outData22B;(* linked to the EL6001 in the TwinCAT System Manager *)
	
	(* background communication with the EL6021 terminal *)
	fbEL6021Ctrl_TC			: SerialLineControl;
	bEL6021CtrlError_TC		: BOOL;
	eEL6021CtrlErrorID_TC		: ComError_t;
	(* 	I/O variables for a EL6021 terminal*)
	stIn_EL6001_TC AT %I*		: EL6inData22B;	(* linked to the EL6001 in the TwinCAT System Manager *)
	stOut_EL6001_TC AT %Q*		: EL6outData22B;(* linked to the EL6001 in the TwinCAT System Manager *)
	
	(* background communication with the EL6002 terminal *)
	fbEL6002Ctrl_Flow			: SerialLineControl;
	bEL6002CtrlError_Flow		: BOOL;
	eEL6002CtrlErrorID_Flow		: ComError_t;
	(* 	I/O variables for a EL6002 terminal*)
	stIn_EL6002_Flow AT %I*		: EL6inData22B;	(* linked to the EL6001 in the TwinCAT System Manager *)
	stOut_EL6002_Flow AT %Q*		: EL6outData22B;(* linked to the EL6001 in the TwinCAT System Manager *)
	
		(* background communication with the EL6002 terminal *)
	fbEL6002Ctrl_MB			: SerialLineControl;
	bEL6002CtrlError_MB		: BOOL;
	eEL6002CtrlErrorID_MB		: ComError_t;
	(* 	I/O variables for a EL6002 terminal*)
	stIn_EL6002_MB AT %I*		: EL6inData22B;	(* linked to the EL6001 in the TwinCAT System Manager *)

END_VAR
VAR_INPUT
		stOut_EL6002_MB AT %Q*		: EL6outData22B;(* linked to the EL6001 in the TwinCAT System Manager *)
END_VAR]]></Declaration>
    <Implementation>
      <ST><![CDATA[(*
The SerialLineControl function block is supposed to be called in every PLC cycle.
It communicates with the serial line hardware device and transmits or receives data.
The SerialLineControl can be called in the standard task (e.g.for PcCOM port usage) 
or in a separate fast task (e.g.for terminal usage) as well.
A fast separate task will be necessary at high baud rates or with KL6001 terminals 
which have a small process image (3 or 5 data bytes only)
*)

(* background communication with the EL6021 terminal *)
fbEL6021Ctrl_RTD(
	Mode := SERIALLINEMODE_EL6_22B,
	pComIn := ADR(stIn_EL6001_RTD), 
	pComOut:= ADR(stOut_EL6001_RTD), 
	SizeComIn := SIZEOF(stIn_EL6001_RTD), 
	Error => bEL6021CtrlError_RTD, 
	ErrorID => eEL6021CtrlErrorID_RTD,
	TxBuffer := GVL.TxBufferEL_RTD, 
	RxBuffer := GVL.RxBufferEL_RTD );
IF fbEL6021Ctrl_RTD.Error THEN
	bEL6021CtrlError_RTD := TRUE;
	eEL6021CtrlErrorID_RTD := fbEL6021Ctrl_RTD.ErrorID;
END_IF

(* background communication with the EL6021 terminal *)
fbEL6021Ctrl_TC(
	Mode := SERIALLINEMODE_EL6_22B,
	pComIn := ADR(stIn_EL6001_TC), 
	pComOut:= ADR(stOut_EL6001_TC), 
	SizeComIn := SIZEOF(stIn_EL6001_TC), 
	Error => bEL6021CtrlError_TC, 
	ErrorID => eEL6021CtrlErrorID_TC,
	TxBuffer := GVL.TxBufferEL_TC, 
	RxBuffer := GVL.RxBufferEL_TC );
IF fbEL6021Ctrl_TC.Error THEN
	bEL6021CtrlError_TC := TRUE;
	eEL6021CtrlErrorID_TC := fbEL6021Ctrl_RTD.ErrorID;
END_IF

(* background communication with the EL6021 terminal *)
fbEL6002Ctrl_Flow(
	Mode := SERIALLINEMODE_EL6_22B,
	pComIn := ADR(stIn_EL6002_Flow), 
	pComOut:= ADR(stOut_EL6002_Flow), 
	SizeComIn := SIZEOF(stIn_EL6002_Flow), 
	Error => bEL6002CtrlError_Flow, 
	ErrorID => eEL6002CtrlErrorID_Flow,
	TxBuffer := GVL.TxBufferEL_Flow, 
	RxBuffer := GVL.RxBufferEL_Flow );
IF fbEL6002Ctrl_Flow.Error THEN
	bEL6002CtrlError_Flow := TRUE;
	eEL6002CtrlErrorID_Flow := fbEL6002Ctrl_Flow.ErrorID;
END_IF

(* background communication with the EL6021 terminal *)
fbEL6002Ctrl_MB(
	Mode := SERIALLINEMODE_EL6_22B,
	pComIn := ADR(stIn_EL6002_MB), 
	pComOut:= ADR(stOut_EL6002_MB), 
	SizeComIn := SIZEOF(stIn_EL6002_MB), 
	Error => bEL6002CtrlError_MB, 
	ErrorID => eEL6002CtrlErrorID_MB,
	TxBuffer := GVL.TxBufferEL_MB, 
	RxBuffer := GVL.RxBufferEL_MB );
IF fbEL6002Ctrl_MB.Error THEN
	bEL6002CtrlError_MB := TRUE;
	eEL6002CtrlErrorID_MB := fbEL6002Ctrl_MB.ErrorID;
END_IF]]></ST>
    </Implementation>
    <LineIds Name="BackgroundEL">
      <LineId Id="23" Count="16" />
      <LineId Id="113" Count="0" />
      <LineId Id="41" Count="3" />
      <LineId Id="5" Count="0" />
      <LineId Id="132" Count="13" />
      <LineId Id="131" Count="0" />
      <LineId Id="172" Count="13" />
      <LineId Id="171" Count="0" />
      <LineId Id="220" Count="13" />
      <LineId Id="219" Count="0" />
    </LineIds>
  </POU>
</TcPlcObject>